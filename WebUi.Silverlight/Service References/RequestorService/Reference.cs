//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WebUi.Silverlight.RequestorService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchEntityProxy", Namespace="http://schemas.datacontract.org/2004/07/RequestorService")]
    public partial class SearchEntityProxy : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CategoryField;
        
        private string CategoryAsValueField;
        
        private string CategoryCustomField;
        
        private WebUi.Silverlight.RequestorService.Category CategoryEnumField;
        
        private string CurrentHashField;
        
        private int EndPriceField;
        
        private string EndPriceCustomField;
        
        private string IdField;
        
        private string KeywordsField;
        
        private string LastHashField;
        
        private bool NotifyOnNextOfferField;
        
        private string OwnerField;
        
        private WebUi.Silverlight.RequestorService.PriceRange PriceRangeEnumField;
        
        private string SpecificationsField;
        
        private int StartPriceField;
        
        private string StartPriceCustomField;
        
        private int StateField;
        
        private string StateCustomField;
        
        private WebUi.Silverlight.RequestorService.State StateEnumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryAsValue {
            get {
                return this.CategoryAsValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryAsValueField, value) != true)) {
                    this.CategoryAsValueField = value;
                    this.RaisePropertyChanged("CategoryAsValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCustom {
            get {
                return this.CategoryCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCustomField, value) != true)) {
                    this.CategoryCustomField = value;
                    this.RaisePropertyChanged("CategoryCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebUi.Silverlight.RequestorService.Category CategoryEnum {
            get {
                return this.CategoryEnumField;
            }
            set {
                if ((this.CategoryEnumField.Equals(value) != true)) {
                    this.CategoryEnumField = value;
                    this.RaisePropertyChanged("CategoryEnum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentHash {
            get {
                return this.CurrentHashField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentHashField, value) != true)) {
                    this.CurrentHashField = value;
                    this.RaisePropertyChanged("CurrentHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndPrice {
            get {
                return this.EndPriceField;
            }
            set {
                if ((this.EndPriceField.Equals(value) != true)) {
                    this.EndPriceField = value;
                    this.RaisePropertyChanged("EndPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndPriceCustom {
            get {
                return this.EndPriceCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.EndPriceCustomField, value) != true)) {
                    this.EndPriceCustomField = value;
                    this.RaisePropertyChanged("EndPriceCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastHash {
            get {
                return this.LastHashField;
            }
            set {
                if ((object.ReferenceEquals(this.LastHashField, value) != true)) {
                    this.LastHashField = value;
                    this.RaisePropertyChanged("LastHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyOnNextOffer {
            get {
                return this.NotifyOnNextOfferField;
            }
            set {
                if ((this.NotifyOnNextOfferField.Equals(value) != true)) {
                    this.NotifyOnNextOfferField = value;
                    this.RaisePropertyChanged("NotifyOnNextOffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebUi.Silverlight.RequestorService.PriceRange PriceRangeEnum {
            get {
                return this.PriceRangeEnumField;
            }
            set {
                if ((this.PriceRangeEnumField.Equals(value) != true)) {
                    this.PriceRangeEnumField = value;
                    this.RaisePropertyChanged("PriceRangeEnum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specifications {
            get {
                return this.SpecificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationsField, value) != true)) {
                    this.SpecificationsField = value;
                    this.RaisePropertyChanged("Specifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartPrice {
            get {
                return this.StartPriceField;
            }
            set {
                if ((this.StartPriceField.Equals(value) != true)) {
                    this.StartPriceField = value;
                    this.RaisePropertyChanged("StartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartPriceCustom {
            get {
                return this.StartPriceCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.StartPriceCustomField, value) != true)) {
                    this.StartPriceCustomField = value;
                    this.RaisePropertyChanged("StartPriceCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCustom {
            get {
                return this.StateCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCustomField, value) != true)) {
                    this.StateCustomField = value;
                    this.RaisePropertyChanged("StateCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebUi.Silverlight.RequestorService.State StateEnum {
            get {
                return this.StateEnumField;
            }
            set {
                if ((this.StateEnumField.Equals(value) != true)) {
                    this.StateEnumField = value;
                    this.RaisePropertyChanged("StateEnum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultEntityProxy", Namespace="http://schemas.datacontract.org/2004/07/RequestorService")]
    public partial class SearchResultEntityProxy : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WebUi.Silverlight.RequestorService.Category CategoryEnumField;
        
        private int EndPriceField;
        
        private string EndPriceCustomField;
        
        private string IdField;
        
        private string OfferField;
        
        private WebUi.Silverlight.RequestorService.PriceRange PriceRangeEnumField;
        
        private string SearchIdField;
        
        private string SpecificationsField;
        
        private int StartPriceField;
        
        private string StartPriceCustomField;
        
        private int StateField;
        
        private string StateCustomField;
        
        private WebUi.Silverlight.RequestorService.State StateEnumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebUi.Silverlight.RequestorService.Category CategoryEnum {
            get {
                return this.CategoryEnumField;
            }
            set {
                if ((this.CategoryEnumField.Equals(value) != true)) {
                    this.CategoryEnumField = value;
                    this.RaisePropertyChanged("CategoryEnum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndPrice {
            get {
                return this.EndPriceField;
            }
            set {
                if ((this.EndPriceField.Equals(value) != true)) {
                    this.EndPriceField = value;
                    this.RaisePropertyChanged("EndPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndPriceCustom {
            get {
                return this.EndPriceCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.EndPriceCustomField, value) != true)) {
                    this.EndPriceCustomField = value;
                    this.RaisePropertyChanged("EndPriceCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Offer {
            get {
                return this.OfferField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferField, value) != true)) {
                    this.OfferField = value;
                    this.RaisePropertyChanged("Offer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebUi.Silverlight.RequestorService.PriceRange PriceRangeEnum {
            get {
                return this.PriceRangeEnumField;
            }
            set {
                if ((this.PriceRangeEnumField.Equals(value) != true)) {
                    this.PriceRangeEnumField = value;
                    this.RaisePropertyChanged("PriceRangeEnum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchId {
            get {
                return this.SearchIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchIdField, value) != true)) {
                    this.SearchIdField = value;
                    this.RaisePropertyChanged("SearchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specifications {
            get {
                return this.SpecificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationsField, value) != true)) {
                    this.SpecificationsField = value;
                    this.RaisePropertyChanged("Specifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartPrice {
            get {
                return this.StartPriceField;
            }
            set {
                if ((this.StartPriceField.Equals(value) != true)) {
                    this.StartPriceField = value;
                    this.RaisePropertyChanged("StartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartPriceCustom {
            get {
                return this.StartPriceCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.StartPriceCustomField, value) != true)) {
                    this.StartPriceCustomField = value;
                    this.RaisePropertyChanged("StartPriceCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCustom {
            get {
                return this.StateCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCustomField, value) != true)) {
                    this.StateCustomField = value;
                    this.RaisePropertyChanged("StateCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebUi.Silverlight.RequestorService.State StateEnum {
            get {
                return this.StateEnumField;
            }
            set {
                if ((this.StateEnumField.Equals(value) != true)) {
                    this.StateEnumField = value;
                    this.RaisePropertyChanged("StateEnum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Helpers.Searches.Definitions")]
    public enum Category : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cars = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Food = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gadgets = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Computers = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Music = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Appratments = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        House = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pet = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        End = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceRange", Namespace="http://schemas.datacontract.org/2004/07/Helpers.Searches.Definitions")]
    public enum PriceRange : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_5 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_10 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_20 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_50 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_100 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_150 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_200 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_250 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_300 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_350 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_400 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_450 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_500 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_550 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_600 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_650 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_700 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_750 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_800 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_850 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_900 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_950 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        P_1000 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        End = 25,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/Helpers.Searches.Definitions")]
    public enum State : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Used = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        End = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RequestorService.IRequestorService")]
    public interface IRequestorService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRequestorService/GetSearchesForUser", ReplyAction="http://tempuri.org/IRequestorService/GetSearchesForUserResponse")]
        System.IAsyncResult BeginGetSearchesForUser(string userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>> EndGetSearchesForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRequestorService/AddNewSearchForUser", ReplyAction="http://tempuri.org/IRequestorService/AddNewSearchForUserResponse")]
        System.IAsyncResult BeginAddNewSearchForUser(string userId, WebUi.Silverlight.RequestorService.SearchEntityProxy searchEntityProxy, System.AsyncCallback callback, object asyncState);
        
        void EndAddNewSearchForUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestorServiceChannel : WebUi.Silverlight.RequestorService.IRequestorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSearchesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSearchesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestorServiceClient : System.ServiceModel.ClientBase<WebUi.Silverlight.RequestorService.IRequestorService>, WebUi.Silverlight.RequestorService.IRequestorService {
        
        private BeginOperationDelegate onBeginGetSearchesForUserDelegate;
        
        private EndOperationDelegate onEndGetSearchesForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetSearchesForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewSearchForUserDelegate;
        
        private EndOperationDelegate onEndAddNewSearchForUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewSearchForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RequestorServiceClient() {
        }
        
        public RequestorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSearchesForUserCompletedEventArgs> GetSearchesForUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddNewSearchForUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebUi.Silverlight.RequestorService.IRequestorService.BeginGetSearchesForUser(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSearchesForUser(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>> WebUi.Silverlight.RequestorService.IRequestorService.EndGetSearchesForUser(System.IAsyncResult result) {
            return base.Channel.EndGetSearchesForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetSearchesForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return ((WebUi.Silverlight.RequestorService.IRequestorService)(this)).BeginGetSearchesForUser(userId, callback, asyncState);
        }
        
        private object[] OnEndGetSearchesForUser(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>> retVal = ((WebUi.Silverlight.RequestorService.IRequestorService)(this)).EndGetSearchesForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSearchesForUserCompleted(object state) {
            if ((this.GetSearchesForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSearchesForUserCompleted(this, new GetSearchesForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSearchesForUserAsync(string userId) {
            this.GetSearchesForUserAsync(userId, null);
        }
        
        public void GetSearchesForUserAsync(string userId, object userState) {
            if ((this.onBeginGetSearchesForUserDelegate == null)) {
                this.onBeginGetSearchesForUserDelegate = new BeginOperationDelegate(this.OnBeginGetSearchesForUser);
            }
            if ((this.onEndGetSearchesForUserDelegate == null)) {
                this.onEndGetSearchesForUserDelegate = new EndOperationDelegate(this.OnEndGetSearchesForUser);
            }
            if ((this.onGetSearchesForUserCompletedDelegate == null)) {
                this.onGetSearchesForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSearchesForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetSearchesForUserDelegate, new object[] {
                        userId}, this.onEndGetSearchesForUserDelegate, this.onGetSearchesForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebUi.Silverlight.RequestorService.IRequestorService.BeginAddNewSearchForUser(string userId, WebUi.Silverlight.RequestorService.SearchEntityProxy searchEntityProxy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewSearchForUser(userId, searchEntityProxy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebUi.Silverlight.RequestorService.IRequestorService.EndAddNewSearchForUser(System.IAsyncResult result) {
            base.Channel.EndAddNewSearchForUser(result);
        }
        
        private System.IAsyncResult OnBeginAddNewSearchForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            WebUi.Silverlight.RequestorService.SearchEntityProxy searchEntityProxy = ((WebUi.Silverlight.RequestorService.SearchEntityProxy)(inValues[1]));
            return ((WebUi.Silverlight.RequestorService.IRequestorService)(this)).BeginAddNewSearchForUser(userId, searchEntityProxy, callback, asyncState);
        }
        
        private object[] OnEndAddNewSearchForUser(System.IAsyncResult result) {
            ((WebUi.Silverlight.RequestorService.IRequestorService)(this)).EndAddNewSearchForUser(result);
            return null;
        }
        
        private void OnAddNewSearchForUserCompleted(object state) {
            if ((this.AddNewSearchForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewSearchForUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewSearchForUserAsync(string userId, WebUi.Silverlight.RequestorService.SearchEntityProxy searchEntityProxy) {
            this.AddNewSearchForUserAsync(userId, searchEntityProxy, null);
        }
        
        public void AddNewSearchForUserAsync(string userId, WebUi.Silverlight.RequestorService.SearchEntityProxy searchEntityProxy, object userState) {
            if ((this.onBeginAddNewSearchForUserDelegate == null)) {
                this.onBeginAddNewSearchForUserDelegate = new BeginOperationDelegate(this.OnBeginAddNewSearchForUser);
            }
            if ((this.onEndAddNewSearchForUserDelegate == null)) {
                this.onEndAddNewSearchForUserDelegate = new EndOperationDelegate(this.OnEndAddNewSearchForUser);
            }
            if ((this.onAddNewSearchForUserCompletedDelegate == null)) {
                this.onAddNewSearchForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewSearchForUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewSearchForUserDelegate, new object[] {
                        userId,
                        searchEntityProxy}, this.onEndAddNewSearchForUserDelegate, this.onAddNewSearchForUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WebUi.Silverlight.RequestorService.IRequestorService CreateChannel() {
            return new RequestorServiceClientChannel(this);
        }
        
        private class RequestorServiceClientChannel : ChannelBase<WebUi.Silverlight.RequestorService.IRequestorService>, WebUi.Silverlight.RequestorService.IRequestorService {
            
            public RequestorServiceClientChannel(System.ServiceModel.ClientBase<WebUi.Silverlight.RequestorService.IRequestorService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSearchesForUser(string userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetSearchesForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>> EndGetSearchesForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>> _result = ((System.Collections.Generic.Dictionary<WebUi.Silverlight.RequestorService.SearchEntityProxy, System.Collections.ObjectModel.ObservableCollection<WebUi.Silverlight.RequestorService.SearchResultEntityProxy>>)(base.EndInvoke("GetSearchesForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNewSearchForUser(string userId, WebUi.Silverlight.RequestorService.SearchEntityProxy searchEntityProxy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = searchEntityProxy;
                System.IAsyncResult _result = base.BeginInvoke("AddNewSearchForUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddNewSearchForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddNewSearchForUser", _args, result);
            }
        }
    }
}
