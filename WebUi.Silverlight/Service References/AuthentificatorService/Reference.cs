//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WebUi.Silverlight.AuthentificatorService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserIdentification", Namespace="http://schemas.datacontract.org/2004/07/AuthentificatorService")]
    public partial class UserIdentification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayNameField;
        
        private string IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthentificatorService.IAuthentificatorService")]
    public interface IAuthentificatorService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAuthentificatorService/SetUserAndGetCookie", ReplyAction="http://tempuri.org/IAuthentificatorService/SetUserAndGetCookieResponse")]
        System.IAsyncResult BeginSetUserAndGetCookie(WebUi.Silverlight.AuthentificatorService.UserIdentification userIdentification, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndSetUserAndGetCookie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAuthentificatorService/GetUserByCookie", ReplyAction="http://tempuri.org/IAuthentificatorService/GetUserByCookieResponse")]
        System.IAsyncResult BeginGetUserByCookie(System.Guid cookie, System.AsyncCallback callback, object asyncState);
        
        WebUi.Silverlight.AuthentificatorService.UserIdentification EndGetUserByCookie(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthentificatorServiceChannel : WebUi.Silverlight.AuthentificatorService.IAuthentificatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetUserAndGetCookieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetUserAndGetCookieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserByCookieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserByCookieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WebUi.Silverlight.AuthentificatorService.UserIdentification Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WebUi.Silverlight.AuthentificatorService.UserIdentification)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthentificatorServiceClient : System.ServiceModel.ClientBase<WebUi.Silverlight.AuthentificatorService.IAuthentificatorService>, WebUi.Silverlight.AuthentificatorService.IAuthentificatorService {
        
        private BeginOperationDelegate onBeginSetUserAndGetCookieDelegate;
        
        private EndOperationDelegate onEndSetUserAndGetCookieDelegate;
        
        private System.Threading.SendOrPostCallback onSetUserAndGetCookieCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserByCookieDelegate;
        
        private EndOperationDelegate onEndGetUserByCookieDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserByCookieCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AuthentificatorServiceClient() {
        }
        
        public AuthentificatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthentificatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthentificatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthentificatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SetUserAndGetCookieCompletedEventArgs> SetUserAndGetCookieCompleted;
        
        public event System.EventHandler<GetUserByCookieCompletedEventArgs> GetUserByCookieCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebUi.Silverlight.AuthentificatorService.IAuthentificatorService.BeginSetUserAndGetCookie(WebUi.Silverlight.AuthentificatorService.UserIdentification userIdentification, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetUserAndGetCookie(userIdentification, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Guid WebUi.Silverlight.AuthentificatorService.IAuthentificatorService.EndSetUserAndGetCookie(System.IAsyncResult result) {
            return base.Channel.EndSetUserAndGetCookie(result);
        }
        
        private System.IAsyncResult OnBeginSetUserAndGetCookie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WebUi.Silverlight.AuthentificatorService.UserIdentification userIdentification = ((WebUi.Silverlight.AuthentificatorService.UserIdentification)(inValues[0]));
            return ((WebUi.Silverlight.AuthentificatorService.IAuthentificatorService)(this)).BeginSetUserAndGetCookie(userIdentification, callback, asyncState);
        }
        
        private object[] OnEndSetUserAndGetCookie(System.IAsyncResult result) {
            System.Guid retVal = ((WebUi.Silverlight.AuthentificatorService.IAuthentificatorService)(this)).EndSetUserAndGetCookie(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetUserAndGetCookieCompleted(object state) {
            if ((this.SetUserAndGetCookieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetUserAndGetCookieCompleted(this, new SetUserAndGetCookieCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetUserAndGetCookieAsync(WebUi.Silverlight.AuthentificatorService.UserIdentification userIdentification) {
            this.SetUserAndGetCookieAsync(userIdentification, null);
        }
        
        public void SetUserAndGetCookieAsync(WebUi.Silverlight.AuthentificatorService.UserIdentification userIdentification, object userState) {
            if ((this.onBeginSetUserAndGetCookieDelegate == null)) {
                this.onBeginSetUserAndGetCookieDelegate = new BeginOperationDelegate(this.OnBeginSetUserAndGetCookie);
            }
            if ((this.onEndSetUserAndGetCookieDelegate == null)) {
                this.onEndSetUserAndGetCookieDelegate = new EndOperationDelegate(this.OnEndSetUserAndGetCookie);
            }
            if ((this.onSetUserAndGetCookieCompletedDelegate == null)) {
                this.onSetUserAndGetCookieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetUserAndGetCookieCompleted);
            }
            base.InvokeAsync(this.onBeginSetUserAndGetCookieDelegate, new object[] {
                        userIdentification}, this.onEndSetUserAndGetCookieDelegate, this.onSetUserAndGetCookieCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebUi.Silverlight.AuthentificatorService.IAuthentificatorService.BeginGetUserByCookie(System.Guid cookie, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserByCookie(cookie, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebUi.Silverlight.AuthentificatorService.UserIdentification WebUi.Silverlight.AuthentificatorService.IAuthentificatorService.EndGetUserByCookie(System.IAsyncResult result) {
            return base.Channel.EndGetUserByCookie(result);
        }
        
        private System.IAsyncResult OnBeginGetUserByCookie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid cookie = ((System.Guid)(inValues[0]));
            return ((WebUi.Silverlight.AuthentificatorService.IAuthentificatorService)(this)).BeginGetUserByCookie(cookie, callback, asyncState);
        }
        
        private object[] OnEndGetUserByCookie(System.IAsyncResult result) {
            WebUi.Silverlight.AuthentificatorService.UserIdentification retVal = ((WebUi.Silverlight.AuthentificatorService.IAuthentificatorService)(this)).EndGetUserByCookie(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserByCookieCompleted(object state) {
            if ((this.GetUserByCookieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserByCookieCompleted(this, new GetUserByCookieCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserByCookieAsync(System.Guid cookie) {
            this.GetUserByCookieAsync(cookie, null);
        }
        
        public void GetUserByCookieAsync(System.Guid cookie, object userState) {
            if ((this.onBeginGetUserByCookieDelegate == null)) {
                this.onBeginGetUserByCookieDelegate = new BeginOperationDelegate(this.OnBeginGetUserByCookie);
            }
            if ((this.onEndGetUserByCookieDelegate == null)) {
                this.onEndGetUserByCookieDelegate = new EndOperationDelegate(this.OnEndGetUserByCookie);
            }
            if ((this.onGetUserByCookieCompletedDelegate == null)) {
                this.onGetUserByCookieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserByCookieCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserByCookieDelegate, new object[] {
                        cookie}, this.onEndGetUserByCookieDelegate, this.onGetUserByCookieCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WebUi.Silverlight.AuthentificatorService.IAuthentificatorService CreateChannel() {
            return new AuthentificatorServiceClientChannel(this);
        }
        
        private class AuthentificatorServiceClientChannel : ChannelBase<WebUi.Silverlight.AuthentificatorService.IAuthentificatorService>, WebUi.Silverlight.AuthentificatorService.IAuthentificatorService {
            
            public AuthentificatorServiceClientChannel(System.ServiceModel.ClientBase<WebUi.Silverlight.AuthentificatorService.IAuthentificatorService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSetUserAndGetCookie(WebUi.Silverlight.AuthentificatorService.UserIdentification userIdentification, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userIdentification;
                System.IAsyncResult _result = base.BeginInvoke("SetUserAndGetCookie", _args, callback, asyncState);
                return _result;
            }
            
            public System.Guid EndSetUserAndGetCookie(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Guid _result = ((System.Guid)(base.EndInvoke("SetUserAndGetCookie", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserByCookie(System.Guid cookie, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cookie;
                System.IAsyncResult _result = base.BeginInvoke("GetUserByCookie", _args, callback, asyncState);
                return _result;
            }
            
            public WebUi.Silverlight.AuthentificatorService.UserIdentification EndGetUserByCookie(System.IAsyncResult result) {
                object[] _args = new object[0];
                WebUi.Silverlight.AuthentificatorService.UserIdentification _result = ((WebUi.Silverlight.AuthentificatorService.UserIdentification)(base.EndInvoke("GetUserByCookie", _args, result)));
                return _result;
            }
        }
    }
}
